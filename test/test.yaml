---
- config:
    - testset: "CRUD Operations Testing"
    - variable_binds: {
        'Kohpai_token': "2fa413b9dba81b06352224172399ec2620d2bb9cd5c68d3fc48f583e00a9d478",
        'sname': "PyRestTest service name",
        'unauth_token': "abc1234",
        'python_code': "ZGVmIG1haW4oYXJncyk6CiAgICByZXR1cm4geyJtZXNzYWdlIjogIkhlbGxvIGZyb20gcHl0aG9uISJ9Cg==",
        'remote_ep': "https://www.google.com",
        'owner': "Kohpai",
        }
    - generators:
        - 'none_id': {type: "random_text", min_length: 5, max_length: 15}

- test:
    - group: "Create City Service"
    - name: "Create a service"
    - url: "/api/v1/services"
    - method: "POST"
    - body: {template: '{"serviceName": "$sname", "description": "PyRestTest service description"}'}
    - headers: {template: {'Content-Type': 'application/json', 'Authorization': '$Kohpai_token'}}
    - expected_status: [201]
    - extract_binds:
        - 'service_id': {'jsonpath_mini': 'serviceId'}

- test:
    - group: "Create City Service"
    - name: "Create a service with already existed serviceName"
    - url: "/api/v1/services"
    - method: "POST"
    - body: {template: '{"serviceName": "$sname", "description": "PyRestTest service description"}'}
    - headers: {template: {'Content-Type': 'application/json', 'Authorization': '$Kohpai_token'}}
    - expected_status: [409]

- test:
    - group: "Create City Service"
    - name: "Create a service with missing required parameters"
    - url: "/api/v1/services"
    - method: "POST"
    - body: {template: '{"description": "PyRestTest service description"}'}
    - headers: {template: {'Content-Type': 'application/json', 'Authorization': '$Kohpai_token'}}
    - expected_status: [400]

- test:
    - group: "Create City Service"
    - name: "Create a service with unauthorized token"
    - url: "/api/v1/services"
    - method: "POST"
    - body: {template: '{"description": "PyRestTest service description"}'}
    - headers: {template: {'Content-Type': 'application/json', 'Authorization': '$unauth_token'}}
    - expected_status: [401, 404]

- test:
    - group: "Read City Service"
    - name: "Read recently created service"
    - url: {template: "/api/v1/services/$service_id"}
    - validators:
        - compare: {jsonpath_mini: 'serviceId', comparator: 'str_eq', expected: {template: '$service_id'}}
        - compare: {jsonpath_mini: 'serviceName', comparator: 'str_eq', expected: {template: '$sname'}}

- test:
    - generator_binds: {none_id: none_id}
    - group: "Read City Service"
    - name: "Read an unexisting service"
    - url: {template: "/api/v1/services/$none_id"}
    - expected_status: [404]

- test:
    - group: "Read City Service"
    - name: "Read all services"
    - url: "/api/v1/services"
    - headers: {template: {'Content-Type': 'application/json'}}

- test:
    - group: "Update City Service"
    - name: "Update a service with general information"
    - url: {template: "/api/v1/services/$service_id"}
    - method: "PATCH"
    - body: {template: '{"endpoint": "$remote_ep"}'}
    - headers: {template: {'Content-Type': 'application/json', 'Authorization': '$Kohpai_token'}}

- test:
    - group: "Update City Service"
    - name: "Update a service with invalid information"
    - url: {template: "/api/v1/services/$service_id"}
    - method: "PATCH"
    - body: {template: '{"owner": "testnaja", "none": true}'}
    - headers: {template: {'Content-Type': 'application/json', 'Authorization': '$Kohpai_token'}}
    - expected_status: [400]

- test:
    - group: "Update City Service"
    - name: "Update a service with code"
    - url: {template: "/api/v1/services/$service_id"}
    - method: "PATCH"
    - body: {template: '{"code": "$python_code", "kind": "python:3"}'}
    - headers: {template: {'Content-Type': 'application/json', 'Authorization': '$Kohpai_token'}}
    - expected_status: [200]

- test:
    - group: "Update City Service"
    - name: "Read recently updated service"
    - url: {template: "/api/v1/services/$service_id"}
    - headers: {template: {'Authorization': '$Kohpai_token'}}
    - validators:
        - compare: {jsonpath_mini: 'endpoint', comparator: 'str_eq', expected: {template: '$remote_ep'}}
        - compare: {jsonpath_mini: 'owner', comparator: 'str_eq', expected: {template: '$owner'}}

# - test:
#     - group: "Update City Service"
#     - name: "Check updated code"
#     - url: {template: "/api/v1/services/$service_id/data"}
#     - validators:
#         - compare: {jsonpath_mini: 'message', comparator: 'str_eq', expected: {template: '$remote_ep'}}

- test:
    - generator_binds: {none_id: none_id}
    - group: "Delete City Service"
    - name: "Delete an unexisting service"
    - url: {template: "/api/v1/services/$none_id"}
    - method: "DELETE"
    - headers: {template: {'Content-Type': 'application/json', 'Authorization': '$Kohpai_token'}}
    - expected_status: [404]

- test:
    - group: "Delete City Service"
    - name: "Delete a service with unauthorized token"
    - url: {template: "/api/v1/services/$service_id"}
    - method: "DELETE"
    - headers: {template: {'Content-Type': 'application/json', 'Authorization': '$unauth_token'}}
    - expected_status: [401, 404]

- test:
    - group: "Delete City Service"
    - name: "Delete a service"
    - url: {template: "/api/v1/services/$service_id"}
    - method: "DELETE"
    - headers: {template: {'Content-Type': 'application/json', 'Authorization': '$Kohpai_token'}}
